/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/plane/plane.gltf -t -k -m 
Author: Yo Boy (https://sketchfab.com/jratanatharathorn)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/aeroplane-ea761da1a27149619794d963580c7ecd
Title: Aeroplane
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
    mesh_1: THREE.Mesh
    mesh_2: THREE.Mesh
    mesh_3: THREE.Mesh
  }
  materials: {
    color_10988977: THREE.MeshStandardMaterial
    color_15277357: THREE.MeshStandardMaterial
    color_16448250: THREE.MeshStandardMaterial
    color_2829873: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/plane.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="RootNode_(gltf_orientation_matrix)" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'RootNode (gltf orientation matrix)' }}>
        <group name="tinkerobjcleanermaterialmergergles" position={[-0.607, -27.643, -27.643]} rotation={[Math.PI / 2, 0, Math.PI]} userData={{ name: 'tinker.obj.cleaner.materialmerger.gles' }}>
          <mesh name="mesh_0" geometry={nodes.mesh_0.geometry} material={materials.color_10988977} />
          <mesh name="mesh_1" geometry={nodes.mesh_1.geometry} material={materials.color_15277357} />
          <mesh name="mesh_2" geometry={nodes.mesh_2.geometry} material={materials.color_16448250} />
          <mesh name="mesh_3" geometry={nodes.mesh_3.geometry} material={materials.color_2829873} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/plane.gltf')
